name: Publish to PyPI

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2 # 检出代码仓库

    - name: Set up Python
      uses: actions/setup-python@v2 # 设置Python环境
      with:
        python-version: 3.11 # 选择适合你的Python版本

    - name: Get the release tag
      id: get_tag
      run: |
        TAG_NAME=${GITHUB_REF##*/} # 提取 tag 名称
        echo "RELEASE_TAG=$TAG_NAME" >> $GITHUB_ENV
      # 获取 Git 标签并存储为环境变量 RELEASE_TAG

    - name: Replace THE_VERSION in setup.py with the release tag
      run: |
        sed -i "s/THE_VERSION/${{ env.RELEASE_TAG }}/g" setup.py
        # 使用 tag 名称替换 setup.py 中的 THE_VERSION

    - name: Build and upload to PyPI
      run: |
        pip install --upgrade setuptools wheel
        python setup.py sdist bdist_wheel # 构建项目并创建包
        pip install twine # 安装Twine以便上传到PyPI
        twine upload dist/* # 使用Twine上传包到PyPI
      env:
        TWINE_USERNAME: __token__ # 使用PyPI API令牌，用户名为 "__token__"
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }} # 使用GitHub仓库的密钥存储的PyPI API令牌
